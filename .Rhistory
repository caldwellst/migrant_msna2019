library(hypegrammaR)
library(parallel)
library(dplyr)
questions <- read.csv("./input/questionnaire.csv", stringsAsFactors = F)
choices <- read.csv("./input/choices.csv", stringsAsFactors = F)
data <- load_data(file = "./input/data.csv")
questionnaire <- load_questionnaire(data = data,
questions = questions,
choices = choices,
choices.label.column.to.use = "label::English (en)")
choices <- read.csv("./input/choices.csv", stringsAsFactors = F)
questionnaire <- load_questionnaire(data = data,
questions = questions,
choices = choices,
choices.label.column.to.use = "label::English (en)")
analysisplan <- load_analysisplan(file = "./input/analysisplan_short.csv")
kobostandards::check_input(data = data, questions = questions, choices = choices ,samplingframe = sampling_frame,
analysisplan = analysisplan) %>% write.csv("./output/check_input.csv")
kobostandards::check_input(data = data, questions = questions, choices = choices,
analysisplan = analysisplan) %>% write.csv("./output/check_input.csv")
results <- from_analysisplan_map_to_output(data = data,
analysisplan = analysisplan,
questionnaire = questionnaire
)
labeled_results <- lapply(results$results, map_to_labeled,questionnaire)
map_to_master_table(results_object = labeled_results, filename = "./output/Ejdabia_preliminary_analysis.csv")
rm(list = ls())
library(hypegrammaR)
library(parallel)
library(dplyr)
questions <- read.csv("./input/questionnaire.csv", stringsAsFactors = F)
choices <- read.csv("./input/choices.csv", stringsAsFactors = F)
data <- load_data(file = "./input/data.csv")
questionnaire <- load_questionnaire(data = data,
questions = questions,
choices = choices,
choices.label.column.to.use = "label::English (en)")
analysisplan <- load_analysisplan(file = "./input/analysisplan.csv")
kobostandards::check_input(data = data, questions = questions, choices = choices,
analysisplan = analysisplan) %>% write.csv("./output/check_input.csv")
data <- load_data(file = "./input/data.csv")
kobostandards::check_input(data = data, questions = questions, choices = choices,
analysisplan = analysisplan) %>% write.csv("./output/check_input.csv")
data <- load_data(file = "./input/data.csv")
results <- from_analysisplan_map_to_output(data = data,
analysisplan = analysisplan,
questionnaire = questionnaire
)
labeled_results <- lapply(results$results, map_to_labeled,questionnaire)
map_to_master_table(results_object = labeled_results, filename = "./output/migrant_analysis.csv")
df <- data
beaver1
beaver2
names(df)
questionnaire$question_type
questionnaire$question_type("services_needed_access",df,T,T)
questionnaire$question_type("public_hospital_unable.excluded_service_providers",df,T,T)
types <- sapply(names(df),questionnaire$question_type,
from.questionnaire = T,
from.data = T,
data = df)
types
names(df)
questionnaire$question_is_sm_choice
questionnaire$question_is_sm_choice(public_hospital)
questionnaire$question_is_sm_choice("public_hospital")
questionnaire$question_is_sm_choice("protection_coping")
questionnaire$question_is_sm_choice("issues_faced_attending_school")
questionnaire$question_is_sm_choice("issues_faced_attending_school")
purrr::map(names(df),
questionnaire$question_is_sm_choice)
sm_choices <- purrr::map(names(df),
questionnaire$question_is_sm_choice) %>% unlist
sum(sm_choices)
questionnaire$raw_questionnaire
questionnaire$raw_questionnaire()$questions
questionnaire$raw_questionnaire
raw_q <- questionnaire$raw_questionnaire()$questions
View(raw_q)
names(df)
raw_q$name
match(names(df),raw_q$name)
raw_q$name
names(df)
raw_q[match(names(df),raw_q$name),"type"]
types_raw <- raw_q[match(names(df),raw_q$name),"type"]
types_raw
types %in% c("select_one","select_multiple")
types[types %in% c("select_one","select_multiple")]<-"categorical"
types
types[sm_choices]
types[sm_choices]<-"sm_choice"
types[types=="numeric"] <- "numerical"
types[types_raw == "text"] <- "text"
types[types_raw == "calculate"] <- "numerical"
types
map_to_datatypes
types <- types[!is.na(types)]
types
rm(list = ls())
source("code/table_function.R")
library(hypegrammaR)
# source("code/preliminary_weighted_analysis.R")
# Run the first 25 lines from the file above to get hte data, questionnaire, etc.
library(tidyverse)
library(parallel)
library(dplyr)
questions <- read.csv("./input/questionnaire.csv", stringsAsFactors = F)
choices <- read.csv("./input/choices.csv", stringsAsFactors = F)
data <- load_data(file = "./input/data.csv")
data <- mutate_if(data, is.character, na_if, "")
questionnaire <- load_questionnaire(data = data,
questions = questions,
choices = choices,
choices.label.column.to.use = "label::English (en)")
text <- filter(questions, str_detect(type, "(\\btext\\b)|(\\bnote\\b)"))$name
choices$label..English..en. <- gsub("^\\d+[.]\\s*","", choices$label..English..en.)
View(choices)
data_to_analyze <- data %>%
select(-one_of(text)) %>%
select(-start, -end, -today, -audit, -device_id, -mantika, -enumerator_id, -organisation_name, -enumerator_name,
-baladiya, -baladiya_label, -consent, -hoh, -`_index`, -`_uuid`, -`_submission_time`, -`_id`,
-`_validation_status`, -`_geolocation_longitude`, -`_geolocation_latitude`, -`_geolocation_altitude`,
-`_geolocation_precision`, -geolocation) %>%
select_if(~ !(all(is.na(.x)) | all(. == "")))
#data_to_analyze <- data_to_analyze[,1:30]
#analysisplan <- analysisplan[2,]
strata_output <- table_maker(data_to_analyze,
questionnaire,
questions,
choices,
labels = T,
language = "english",
"Libya",
"mantika_label")
View(questions)
source("code/table_function.R")
# source("code/preliminary_weighted_analysis.R")
# Run the first 28 lines from the file above to get hte data, questionnaire, etc.
library(tidyverse)
rm(list = ls())
library(hypegrammaR)
library(parallel)
library(dplyr)
questions <- read.csv("./input/questionnaire.csv", stringsAsFactors = F)
choices <- read.csv("./input/choices.csv", stringsAsFactors = F)
data <- load_data(file = "./input/data.csv")
source("code/table_function.R")
data <- mutate_if(data, is.character, na_if, "")
text <- filter(questions, str_detect(type, "(\\btext\\b)|(\\bnote\\b)"))$name
data_to_analyze <- data %>%
select(-one_of(text)) %>%
select(-start, -end, -today, -audit, -device_id, -mantika, -enumerator_id, -organisation_name, -enumerator_name,
-baladiya, -baladiya_label, -consent, -hoh, -`_index`, -`_uuid`, -`_submission_time`, -`_id`,
-`_validation_status`, -`_geolocation_longitude`, -`_geolocation_latitude`, -`_geolocation_altitude`,
-`_geolocation_precision`, -geolocation) %>%
select_if(~ !(all(is.na(.x)) | all(. == "")))
choices$label..English..en. <- gsub("^\\d+[.]\\s*","", choices$label..English..en.)
strata_output <- table_maker(data_to_analyze,
questions,
choices,
weighting_function = NULL,
labels = T,
language = "english",
"Libya",
"mantika_label")
source('C:/Users/REACH/Dropbox/2. Research projects/3. Humanitarian Pillar/1. MSNA/3. MSNA 2019/2. Migrant MSNA/8. Analysis/migrant_msna_analysis/code/table_function.R')
strata_output <- table_maker(data_to_analyze,
questions,
choices,
weighting_function = NULL,
labels = T,
language = "english",
"Libya",
"mantika_label")
saveRDS(strata_output, "output/overall_mantika.RDS")
write_csv(strata_output, "output/overall_mantika.csv", na = "")
analysisplan <- load_analysisplan(file = "./input/analysisplan_medians.csv")
library(hypegrammaR)
library(parallel)
library(dplyr)
questions <- read.csv("./input/questionnaire.csv", stringsAsFactors = F)
choices <- read.csv("./input/choices.csv", stringsAsFactors = F)
data <- load_data(file = "./input/data.csv")
questionnaire <- load_questionnaire(data = data,
questions = questions,
choices = choices,
choices.label.column.to.use = "label::English (en)")
analysisplan <- load_analysisplan(file = "./input/analysisplan_median.csv")
analysisplan <- load_analysisplan(file = "./input/analysisplan_medians.csv")
results <- from_analysisplan_map_to_output(data = data,
analysisplan = analysisplan,
questionnaire = questionnaire
)
labeled_results <- lapply(results$results, map_to_labeled,questionnaire)
map_to_master_table(results_object = labeled_results, filename = "./output/overall_mantika_medians.csv")
library(hypegrammaR)
library(parallel)
library(dplyr)
questions <- read.csv("./input/questionnaire.csv", stringsAsFactors = F)
choices <- read.csv("./input/choices.csv", stringsAsFactors = F)
data <- load_data(file = "./input/data.csv")
questionnaire <- load_questionnaire(data = data,
questions = questions,
choices = choices,
choices.label.column.to.use = "label::English (en)")
analysisplan <- load_analysisplan(file = "./input/analysisplan.csv")
results <- from_analysisplan_map_to_output(data = data,
analysisplan = analysisplan,
questionnaire = questionnaire
)
labeled_results <- lapply(results$results, map_to_labeled,questionnaire)
map_to_master_table(results_object = labeled_results, filename = "./output/overall_mantika_check.csv")
